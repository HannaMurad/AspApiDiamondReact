// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlutProject.Models;

namespace SlutProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210508210119_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SlutProject.Models.Diamond", b =>
                {
                    b.Property<int>("DiamondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DiamondId");

                    b.ToTable("Diamonds");

                    b.HasData(
                        new
                        {
                            DiamondId = 1,
                            Description = "Our famous diamond ring!",
                            ImageName = "pro01.jpg",
                            InStock = true,
                            Name = "Cocktail Ring",
                            OnSale = true,
                            Price = 1200.95m
                        },
                        new
                        {
                            DiamondId = 2,
                            Description = "A summer classic!",
                            ImageName = "pro02.jpg",
                            InStock = true,
                            Name = "Mourning Ring",
                            OnSale = false,
                            Price = 1800.95m
                        },
                        new
                        {
                            DiamondId = 3,
                            Description = "Blazing as fire",
                            ImageName = "pro03.jpg",
                            InStock = true,
                            Name = "Cameo Ring",
                            OnSale = false,
                            Price = 1800.95m
                        },
                        new
                        {
                            DiamondId = 4,
                            Description = "Everlasting love",
                            ImageName = "pro04.jpg",
                            InStock = true,
                            Name = "Eternity Ring",
                            OnSale = false,
                            Price = 1500.95m
                        },
                        new
                        {
                            DiamondId = 5,
                            Description = "A Christmas favorite",
                            ImageName = "pro05.jpg",
                            InStock = true,
                            Name = "Puzzle Ring",
                            OnSale = false,
                            Price = 1300.95m
                        },
                        new
                        {
                            DiamondId = 6,
                            Description = "Pure daimond. Pure pleasure.",
                            ImageName = "pro06.jpg",
                            InStock = true,
                            Name = "Rosary Ring",
                            OnSale = false,
                            Price = 1700.95m
                        },
                        new
                        {
                            DiamondId = 7,
                            Description = "My God, so elegent!",
                            ImageName = "pro07.jpg",
                            InStock = false,
                            Name = "Purity Ring",
                            OnSale = false,
                            Price = 1500.95m
                        },
                        new
                        {
                            DiamondId = 8,
                            Description = "Happy holidays with this ring!",
                            ImageName = "pro08.jpg",
                            InStock = true,
                            Name = "Birthstone Ring",
                            OnSale = true,
                            Price = 1200.95m
                        },
                        new
                        {
                            DiamondId = 9,
                            Description = "You'll love it!",
                            ImageName = "pro09.jpg",
                            InStock = true,
                            Name = "Armour Ring",
                            OnSale = true,
                            Price = 1500.95m
                        });
                });

            modelBuilder.Entity("SlutProject.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("DiamondId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("DiamondId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("SlutProject.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("SlutProject.Models.Diamond", "Diamond")
                        .WithMany()
                        .HasForeignKey("DiamondId");
                });
#pragma warning restore 612, 618
        }
    }
}
